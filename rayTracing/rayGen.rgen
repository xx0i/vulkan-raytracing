#version 460
#extension GL_EXT_ray_tracing : require

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 1, rgba8) writeonly uniform image2D outputImage;
layout(set = 0, binding = 2) uniform UniformData
{
    mat4 view;
    mat4 proj;
} ubo;

layout(location = 0) rayPayloadEXT vec3 payload;

void main()
{
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
	vec2 ndc = inUV * 2.0 - 1.0;

	mat4 invView = inverse(ubo.view);
	mat4 invProj = inverse(ubo.proj);
 	vec4 rayOrigin = invView * vec4(0.0, 0.0, 0.0, 1.0);

	vec4 clip = vec4(ndc.x, ndc.y, 1.0, 1.0);
	vec4 target = invProj * clip;
	target /= target.w;

	vec4 worldDir = invView * vec4(target.xyz, 0.0);
	vec3 rayDirection = normalize(worldDir.xyz);

	payload = vec3(1.0, 0.0, 1.0);
	
	traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xFF, 0, 0, 0, rayOrigin.xyz, 0.001, rayDirection, 10000.0, 0);
	imageStore(outputImage, ivec2(gl_LaunchIDEXT.xy), vec4(payload, 1.0));
}